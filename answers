1. есть 2 prometheus в конфедерации, в один летит шквал метрик от серверов, метрики имеют общий префикс systemd_*_*_* и нужно на нем ограничить фильтром так, 
чтобы {state="Active"} пропускались, а {stste="Disabled"} не пропускались. В какую сторону посмотрите?

  systemd_*_*_*{state="Active"}

2. За сколько сможете написать ansible-playbook который раскатает strongswan сервер к которому могут подключиться iphone, mac, windows 
для среднего офиса, vpn-сервер стоит за NAT, Cisco2901? (50 пользователей, логины/пароли статические) Для простоты считаем, что циско-админ
пробросит нам порты, какие попросим.

  Написал за день, отладка - пара дней, совершенству нет предела:)))
https://github.com/alvic2000/gitinsky/blob/623054fb6451f5e0db97a130cf96118d05dbbaa0/strongswan.yml

3. имеется сильно нагруженный пользователями сервер на php/mysql стеке, проблемы: тормозит, "ресурс недоступен". Что будете смотреть в каком порядке,
как будете действовать? 36vCPU, 80Gb vRAM, 2Tb vDISK (SAN)

  Проверю работу сервера (то на что жалуются) от себя, проверю со стороны frontend-a (с помощью средств разработчика в браузере) в какой момент происходит проблема,
если не связана со ссылками на внешние источники, перехожу к backend-у. Проверка загруженности CPU, Memory, Disk, Network (top, free, htop, iftop). Определю наиболее
ресурсопотребляющее приложение, по быстрому - kill/restart, если терпит - дальнейший анализ: php - совместно с web разаработчикам анализ кода, поиск проблемных мест,
mysql - что смогу - в одну голову - выяснить наиболее ресурсоемкие запросы (mytop) - передать web-разработчикам (администраторам баз данных), совместно устранить
прблему. Проблема с сетью - анализ логов сервера на предмет DDoS - атаки, в случае подтверждения предположения - выяснение характерных признаков атаки и блокировка 
IP ботов (совместно с администратором сети).

4. кейс: клиентская команда разработки из двух человек ведет проект на стеке php/mysql. Устоявшиеся процессы выглядят следующим образом:
- каждый из разработчиков ведет разработку своей части сервиса на локальной копии проекта (в контейнере).
изменения пушатся в бесплатный репозиторий на github.
- деплой изменений на боевое окружение производится средствами git, непосредственно на единственном сервере приложений боевого окружения
(pull нужной ветки из репозитория github).
Сервис развивается, в команду берут еще двух разработчиков.
Порекомендуйте изменение workflow и инструменты, которые позволили бы этой команде продолжить разработку сервиса, избежав организационных и технических проблем.

  Сразу полный стек не подскажу, но теоретически - необходимо внедрение CI/CD практик. (единый репозиторий, разные ветки, team lead ответственный за вливание
  ветки  разработчиков в основную ветку, единообразная тестовая среда(единый образ сервиса (контейнер - копия продакшена)), тестовая среда для нагрузочного
  тестирования изменений. Это то, что приходит в голову навскидку.
  
  5. взять чистую виртуальную машину в virtualbox на ubuntu 18.04, написать плейбук ansible который делает следующее:
 - ставит nginx, zsh, wget
 - клонирует из git в /var/www/ очень простую  web страничку "Under construction"
 - кладет новую конфигурацию nginx которая направляет на эту страничку
 - настраивает в sysctl параметр fs.files-max в 1204000 и somaxconn в 65535
 - прописывает на этой машинке 2 разных ssh ключа в /root
 - результат в git на github в приватном репозитории

https://github.com/alvic2000/gitinsky/blob/94b25df52091eaa80677dcf941d251b70a414808/nginx.yml
 
 
